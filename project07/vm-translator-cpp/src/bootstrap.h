#pragma once

const char* const kDefaultBootstrapCode =
    "// --- BOOTSTRAP ---- \n"
    "// SP = 256\n"
    "@256\n"
    "D=A\n"
    "@SP\n"
    "M=D\n"

    "// RAM[SP+0] <- return address\n"
    "D=0\n"
    "@SP\n"
    "A=M\n"
    "M=D\n"
    "// SP++"
    "@SP\n"
    "M=M+1\n"

    "// RAM[SP+1] <- LCL\n"
    "@LCL\n"
    "A=M\n"
    "D=M\n"
    "@SP\n"
    "A=M\n"
    "M=D\n"
    "// SP++"
    "@SP\n"
    "M=M+1\n"

    "// RAM[SP+1] <- ARG"
    "@ARG\n"
    "A=M\n"
    "D=M\n"
    "@SP\n"
    "A=M\n"
    "M=D\n"
    "// SP++\n"
    "@SP\n"
    "M=M+1\n"

    "// RAM[SP+1] <- THIS\n"
    "@THIS\n"
    "A=M\n"
    "D=M\n"
    "@SP\n"
    "A=M\n"
    "M=D\n"
    "// SP++\n"
    "@SP\n"
    "M=M+1\n"

    "// RAM[SP+1] <- THAT\n"
    "@THAT\n"
    "A=M\n"
    "D=M\n"
    "@SP\n"
    "A=M\n"
    "M=D\n"
    "// SP++"
    "@SP\n"
    "M=M+1\n"

    "// RAM[ARG] = RAM[SP] - 5 - nArgs\n"
    "@5\n"
    "D=A\n"
    "@SP\n"
    "A=M\n"
    "D=M-D\n"
    "@ARG\n"
    "A=M\n"
    "M=D\n"

    "// RAM[LCL] = RAM[SP]\n"
    "@SP\n"
    "A=M\n"
    "D=A\n"
    "@LCL\n"
    "A=M\n"
    "M=D\n"

    "// call Sys.init\n"
    "@Sys.init\n"
    "0;JMP\n"
    "// --- END BOOTSTRAP ---- \n\n\n";
