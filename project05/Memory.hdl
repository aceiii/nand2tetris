// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/5/Memory.hdl
/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O.
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory
 * location specified by address. If load=1, the in value is loaded
 * into the memory location specified by address. This value becomes
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used.
 * Access to address>0x6000 is invalid. Access to any address in
 * the range 0x4000-0x5FFF results in accessing the screen memory
 * map. Access to address 0x6000 results in accessing the keyboard
 * memory map. The behavior in these addresses is described in the Screen
 * and Keyboard chip specifications given in the lectures and the book.
 */
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:

    Not(in=address[14], out=isram);
    And(a=load, b=isram, out=writeram);
    RAM16K(in=in, load=writeram, address=address[0..13], out=ramout);

    Not(in=address[13], out=screenlo);
    And(a=address[14], b=screenlo, out=isscreen);
    And(a=load, b=isscreen, out=writescreen);
    Screen(in=in, load=writescreen, address=address[0..12], out=screenout);

    Keyboard(out=kbd);
    Or8Way(in=address[0..7], out=kbdlobits1);
    Or8Way(in[0..4]=address[8..12], out=kbdlobits2);
    Or(a=kbdlobits1, b=kbdlobits2, out=kbdlobits);
    Not(in=kbdlobits, out=kbdzerobits);
    And(a=address[13], b=address[14], out=kbdbits);
    And(a=kbdbits, b=kbdzerobits, out=iskbd);

    Mux16(a=ramout, b=screenout, sel=isscreen, out=ramscreenout);
    Mux16(a=ramscreenout, b=kbd, sel=iskbd, out=out);
}
